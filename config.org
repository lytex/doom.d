#+title: doom emacs config.el
#+PROPERTY: header-args :tangle yes :padline no :noweb yes
#+STARTUP: nohideblocks

* Lexical binding
:PROPERTIES:
:ID:       fe9639f6-d041-491d-ae35-21754b196591
:END:
#+begin_src emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-


;; blank
#+end_src
* Personal information
:PROPERTIES:
:ID:       a2f58232-1e91-4f02-8d19-4265b6eb02e4
:END:
#+begin_src emacs-lisp

(load! "~/.doom.d/work.el")


(setq user-full-name "Julian Lopez Carballal")
(if WORK_ENV
    (setq user-mail-address "julopezc@acciona.com")
    (setq user-mail-address "julianlpc15@gmail.com"))

;; blank
#+end_src
* Fonts and color themes
:PROPERTIES:
:ID:       e67365d5-3d6a-429f-9d0d-90a2fa5eddc7
:END:
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Fantasque Sans Mono" :size 14))
(setq doom-unicode-font (font-spec :name "Fantasque Sans Mono" :size 14))
(setq org-emph-face (font-spec :family "Fantasque Sans Mono" :size 14))

(beacon-mode 1)
(setq beacon-color "dark orange")

(setq doom-theme 'doom-one)

(load! "~/.doom.d/modules/LectureNotes.el")
;; blank
#+end_src
* org and evil modules
:PROPERTIES:
:ID:       a3c1450f-e71d-4b23-a4c3-fc8aa059a30d
:END:
#+begin_src emacs-lisp
(load! "~/.doom.d/modules/org.el")
(load! "~/.doom.d/modules/evil.el")
(load! "~/.doom.d/modules/xournalpp.el")
;; blank
#+end_src
* Doom config
:PROPERTIES:
:ID:       4a36ba05-1c32-4766-a889-8e79b9a49c13
:END:
#+begin_src emacs-lisp
;; blank
(setq  persp-save-dir (expand-file-name (concat org-directory ".sessions")))
;; blank
#+end_src
* org-roam
:PROPERTIES:
:ID:       9ad88b67-8280-4871-8967-2dc4b6c20773
:END:
#+begin_src emacs-lisp
(load! "~/.doom.d/modules/org-roam.el")
;; blank
#+end_src
** SPC
*** bo
:PROPERTIES:
:ID:       07e92d5e-7202-47d6-b558-6a41c399052c
:END:
#+begin_src emacs-lisp
(map!
      :after org-roam
      :leader
      "bo" #'lytex/revert-buffer-reload-roam)
;; blank
#+end_src
*** r
:PROPERTIES:
:ID:       34426c0c-b43f-49e8-b302-93348be263e8
:END:
#+begin_src emacs-lisp
(map! :after org-roam
      :leader
      :prefix ("r" . "org-roam")
#+end_src
**** o
:PROPERTIES:
:ID:       5b53e429-64ae-420d-905a-048c272796f4
:END:
Open org roam sidebar
#+begin_src emacs-lisp
      :desc (documentation 'org-roam) "o" #'org-roam
#+end_src
**** u
:PROPERTIES:
:ID:       f5852e15-fb1f-4fd1-8bfb-6ecb3039cc40
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-roam-unlinked-references) "u" #'org-roam-unlinked-references
#+end_src
**** c
:PROPERTIES:
:ID:       24047197-49d6-4e1c-8af6-d1269d586b81
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-roam-capture) "c" #'org-roam-capture
#+end_src
#+begin_src emacs-lisp
      :desc (documentation 'org-roam-insert) "i" #'org-roam-insert
#+end_src
#+begin_src emacs-lisp
      :desc (documentation 'org-roam-find-file) "r" #'org-roam-find-file
#+end_src
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-roam-open-buffer-at-bottom) "j" #'lytex/org-roam-open-buffer-at-bottom
#+end_src
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-open-new-buffer) "n" #'lytex/org-open-new-buffer
#+end_src
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-follow-link-vsplit) "v" #'lytex/org-follow-link-vsplit
#+end_src
#+begin_src emacs-lisp
      :desc (documentation 'org-roam-graph) "g" #'org-roam-graph)
#+end_src

*** rp
:PROPERTIES:
:ID:       a1710a4e-700b-4aab-86f5-572886418f4f
:END:
#+begin_src emacs-lisp
;; blank
(map! :after org-roam
      :leader
      :prefix ("rp" . "lytex/xournalpp")
#+end_src
**** i
:PROPERTIES:
:ID:       eaa41495-7c2d-4975-b492-488869847ae8
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/insert-global-sketch) "i" #'lytex/insert-global-sketch
#+end_src
**** p
:PROPERTIES:
:ID:       86d86ac1-c55c-4792-b427-abaae0ce0fcc
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/reset-sketch) "p" #'lytex/reset-sketch)

#+end_src
*** rf
:PROPERTIES:
:ID:       7c00f2db-d6d6-4a71-8985-1a7a89cec0d2
:END:
#+begin_src emacs-lisp
;; blank
(map! :after org-roam
      :leader
      :prefix ("rf" . "lytex/org-roam-refile")
#+end_src
**** l
:PROPERTIES:
:ID:       6e9eab60-e404-47f6-a0a0-3015ee1b76c0
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-link-and-refile) "l" #'lytex/org-link-and-refile
#+end_src
**** c
:PROPERTIES:
:ID:       53d87e65-0e7e-4f31-a2b0-35692505ab0c
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-refile-to-capture) "c" #'lytex/org-refile-to-capture
#+end_src
**** b
:PROPERTIES:
:ID:       b9ab6261-ec50-46fe-b4f1-adef65df33b4
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-link-and-refile-to-capture) "b" #'lytex/org-link-and-refile-to-capture)
#+end_src
*** rh
:PROPERTIES:
:ID:       a176228c-9352-4083-9dea-95ec6fba413f
:END:
#+begin_src emacs-lisp
;; blank
(map! :after org-roam
      :leader
      :prefix ("rh" . "lytex/org-roam-heading")
#+end_src
**** o
:PROPERTIES:
:ID:       398547ee-9f67-40f5-845a-d3b8b0b9eaf9
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-roam-heading-backlinks) "o" #'lytex/org-roam-heading-backlinks
#+end_src
**** u
:PROPERTIES:
:ID:       4eedc3e4-2431-48d8-9dd7-b859379bd9f3
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-roam-heading-unlinked-references) "u" #'lytex/org-roam-heading-unlinked-references
#+end_src
**** l
:PROPERTIES:
:ID:       754ef9fa-008a-4de6-89ef-43a1a775274c
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/org-roam-headings-all) "l" #'lytex/org-roam-headings-all)
#+end_src
* org-journal
:PROPERTIES:
:ID:       24da4b74-f292-4fa1-b83f-4e3d9670d47e
:END:
#+begin_src emacs-lisp
;; blank
(load! "~/.doom.d/modules/org-journal.el")
;; blank
#+end_src
** SPC
*** om/jm
:PROPERTIES:
:ID:       1124c535-1f8f-4754-a514-a742aa43e178
:END:
#+begin_src emacs-lisp
(map!
      :after org-journal
      :leader
      "jm" #'org-journal-mode)
(map!
      :leader
      "om" #'org-mode)
;; blank
#+end_src
*** mj
:PROPERTIES:
:ID:       218c3935-6094-459d-92a7-0b8709de9a78
:END:
#+begin_src emacs-lisp
(map!
      :after org-journal
      :leader
      :desc (documentation 'org-journal-new-entry)  "mj" #'org-journal-new-entry
#+end_src
*** j
**** j
:PROPERTIES:
:ID:       fb64e2cb-1aa0-4ee9-8258-cf172abb3d6b
:END:
#+begin_src emacs-lisp
      "jj" #'lytex/set-org-journal-J
#+end_src
**** i
:PROPERTIES:
:ID:       b0cf03c8-175e-41fe-817b-97f74016b6a6
:END:
#+begin_src emacs-lisp
      "ji" #'lytex/set-org-journal-I
#+end_src
**** w
:PROPERTIES:
:ID:       a042ac59-cb22-4551-99b5-44a7d85dec90
:END:
#+begin_src emacs-lisp
      "jw" #'lytex/set-org-journal-W)
#+end_src
**** p
:PROPERTIES:
:ID:       30da5671-8254-44e9-9272-272a2d86c942
:END:
#+begin_src emacs-lisp
;; blank
(map! :after org-journal
      :leader
      :desc (documentation 'org-journal-previous-entry) "jp" #'org-journal-previous-entry
#+end_src
**** n
:PROPERTIES:
:ID:       a617e02f-5dfd-45c1-b456-f3955a577a7d
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-journal-next-entry) "jn" #'org-journal-next-entry)
#+end_src
* org-misc
:PROPERTIES:
:ID:       2726f6d9-1538-4385-9d88-2742fb3d9c45
:END:
#+begin_src emacs-lisp
;; blank
(load! "~/.doom.d/modules/org-misc.el")
;; blank
#+end_src
* org-ql
:PROPERTIES:
:ID:       a9a417e5-1971-4669-ba71-96249341c7b9
:END:
#+begin_src emacs-lisp
(load! "~/.doom.d/modules/org-ql.el")
;; blank
#+end_src
** SPC
*** oq
:PROPERTIES:
:ID:       12c2c90c-a7a7-4f5d-a8c7-86b5dc72f489
:END:
#+begin_src emacs-lisp
(map!
      :after org-ql
      :leader
      :prefix ("oq" . "org-ql-search")

#+end_src
**** w
:PROPERTIES:
:ID:       bf63d88d-8623-4636-ac2b-cf28984202f5
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-ql-view)  "w" #'org-ql-view
#+end_src
**** s
:PROPERTIES:
:ID:       c6d877ff-2a21-42ba-801b-ea1d8abffbe5
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-ql-view-sidebar)  "s" #'org-ql-view-sidebar
#+end_src
**** t
:PROPERTIES:
:ID:       d70c55a7-7fb8-41d6-bc0b-351b5ce21d88
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-ql-sparse-tree)  "t" #'org-ql-sparse-tree
#+end_src
**** q
:PROPERTIES:
:ID:       22232dfb-ecee-44e1-820b-74ecc94725f1
:END:
q is for query
:PROPERTIES:
:ID:       9457d7ef-161b-45b5-b3d4-68027eda3e21
:END:
#+begin_src emacs-lisp
      :desc (documentation 'org-ql-search)  "q" #'org-ql-search
#+end_src
**** r
:PROPERTIES:
:ID:       2b2bef69-1796-46f8-8760-193214819b08
:END:
#+begin_src emacs-lisp
      :desc (documentation 'lytex/reload-org-ql)  "r" #'lytex/reload-org-ql)
#+end_src
*** rt
:PROPERTIES:
:ID:       62c1b4f8-134e-402d-8e1f-6483fa72f38a
:END:
#+begin_src emacs-lisp
;; blank
(map! :after org-ql
      :leader
      :prefix ("rt" . "lytex/org-sparse-tree")
      :desc (documentation 'lytex/org-sparse-tree-full) "j" #'lytex/org-sparse-tree-full
      :desc (documentation 'lytex/org-sparse-tree-almost-full) "k" #'lytex/org-sparse-tree-almost-full
      :desc (documentation 'lytex/org-sparse-tree-trimmed) "l" #'lytex/org-sparse-tree-trimmed)
#+end_src
* helm-rg
:PROPERTIES:
:ID:       f2074ffa-8907-42f4-9205-7d52ebc31d19
:END:
#+begin_src emacs-lisp
;; blank

(use-package! helm-rg)
#+end_src
** SPC nrg
:PROPERTIES:
:ID:       3045fcd3-6951-4f27-959d-f8c63cfc2b0c
:END:
#+begin_src emacs-lisp
(setq helm-rg-default-directory org-directory)
(map! :after helm
      :leader
      :desc (documentation 'helm-rg) "nrg" #'helm-rg)
#+end_src
* pdf
:PROPERTIES:
:ID:       81a0d29e-e514-4cc1-8f98-8c6f9181a5af
:END:
#+begin_src emacs-lisp
;; blank
(load! "~/.doom.d/modules/pdf.el")
;; blank
#+end_src
All =pdf-annot-add-*-markup= keybindings are in the left hand.
The idea is to use the left hand to select an annotation and use the mouse on the right hand to select where to place it
#+begin_src emacs-lisp
(after! (pdf-tools)
(map! :leader
      :mode (pdf-view-mode)
      :prefix ("a" . "annotations in pdf")
      :desc (documentation 'pdf-annot-add-markup-annotation)
      "a" #'lytex/pdf-annot-add-markup-annotation
      :desc (documentation 'pdf-annot-add-squiggly-markup-annotation)
      "g" #'lytex/pdf-annot-add-squiggly-markup-annotation
      :desc (documentation 'pdf-annot-add-highlight-markup-annotation)
      "f" #'lytex/pdf-annot-add-highlight-markup-annotation
      :desc (documentation 'pdf-annot-add-strikeout-markup-annotation)
      "s" #'lytex/pdf-annot-add-strikeout-markup-annotation
      :desc (documentation 'pdf-annot-add-underline-markup-annotation)
      "d" #'lytex/pdf-annot-add-underline-markup-annotation
      :desc (documentation 'lytex/join-org-headline-previous)
      "p" #'lytex/join-org-headline-previous
      :desc (documentation 'lytex/join-org-headline-next)
      "n" #'lytex/join-org-headline-next)


(map! :leader
      :mode (pdf-view-mode)
      :prefix "p"
      :desc (documentation 'pdf-history-backward)  "[" #'pdf-history-backward
      :desc (documentation 'pdf-history-forward)  "]" #'pdf-history-forward))

(after! org-noter
      (map! :leader
      :prefix ("on" . "org-noter")
      :desc (documentation 'org-noter-sync-current-note) "s" #'org-noter-sync-current-note
      :desc (documentation 'org-noter-sync-prev-note) "p" #'org-noter-sync-prev-note
      :desc (documentation 'org-noter-sync-next-note) "n" #'org-noter-sync-next-note
      :desc (documentation 'org-noter-insert-precise-note) "i" #'org-noter-insert-precise-note))
;; blank
#+end_src

* misc
:PROPERTIES:
:ID:       65f85022-c981-43f8-bd53-b2c691bb00be
:END:
#+begin_src emacs-lisp
(use-package! highlight-indent-guides
  :hook (prog-mode . highlight-indent-guides-mode)
  :init
  (setq highlight-indent-guides-method 'character))

(add-hook 'ediff-load-hook
               (lambda ()
                 (set-face-background
                   ediff-current-diff-face-A  "red")
                 (set-face-background
                   ediff-current-diff-face-B "blue")))

(use-package! activity-watch-mode)
(global-activity-watch-mode)


(load! "~/.doom.d/modules/org-transclusion.el"  )

;; (load! "~/.doom.d/modules/excorporate.el")

(if WORK_ENV
  (use-package! org-trello))

(load! "~/.doom.d/modules/org-export.el")

(load! "~/.doom.d/modules/org-caldav.el")

(use-package! emojify)

(add-hook 'after-init-hook #'global-emojify-mode)

(defun lytex/disable-emojify (match &rest ignored)
  (or (string= match "↔") (string= match "↖") (string= match "↗") (string= match "↘") (string= match "↙")))

(add-hook 'emojify-inhibit-functions #'lytex/disable-emojify)

(setq org-id-locations-file "~/.emacs.d/.org-id-locations")
#+end_src
* Personal/Work profiles
:PROPERTIES:
:ID:       ebcc0f30-fc86-461d-be3c-185c9a297d42
:END:
#+begin_src emacs-lisp
(defun lytex/toggle-work ()
  "Toggle work profile"
  (interactive)
  (setq WORK_ENV (not WORK_ENV))
  (lytex/reload-org-ql))
(map!
      :after org-ql
      :leader
      :desc (documentation 'lytex/toggle-work) "tw" #'lytex/toggle-work)
#+end_src

* Convenience functions
** Remove advice from functions
:PROPERTIES:
:ID:       c8b3c827-ae4b-4737-8ca6-69fb1856e05d
:END:
#+begin_src emacs-lisp
;; From https://emacs.stackexchange.com/a/33344:
(defun yf/advice-list (symbol)
  (let (result)
    (advice-mapc
     (lambda (ad props)
       (push ad result))
     symbol)
    (nreverse result)))

(defun yf/kill-advice (symbol advice)
  "Kill ADVICE from SYMBOL."
  (interactive (let* ((sym (intern (completing-read "Function: " obarray #'yf/advice-list t)))
                      (advice (let ((advices-and-their-name
                                     (mapcar (lambda (ad) (cons (prin1-to-string ad)
                                                                ad))
                                             (yf/advice-list sym))))
                                (cdr (assoc (completing-read "Remove advice: " advices-and-their-name nil t)
                                            advices-and-their-name)))))
                 (list sym advice)))
  (advice-remove symbol advice))

;; blank
#+end_src
** Get face at point
:PROPERTIES:
:ID:       eec45c81-450d-4eac-9da6-5a71b151c9b7
:END:
#+begin_src emacs-lisp
;; Disable hl-mode or all faces will be the same!
(defun what-face (pos)
  (interactive "d")
  (let ((face (or (get-char-property (point) 'read-face-name)
                  (get-char-property (point) 'face))))
    (if face (message "Face: %s" face) (message "No face at %d" pos))))
#+end_src
* Local Variables
Replace all ocurrences of ";; blank" with blank space
There is no way to control blank space AFAIK:
https://emacs.stackexchange.com/questions/31738/org-mode-babel-ensure-more-than-one-empty-line-between-tangled-code-blocks-fo
# Local Variables:
# eval: (add-hook 'org-babel-post-tangle-hook #'(lambda () (progn (goto-char 0) (while (search-forward ";; blank" nil t) (replace-match "")) (save-buffer))))
# End:
